// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Port_Morski.Models;

#nullable disable

namespace Port_Morski.Migrations
{
    [DbContext(typeof(SeaPortContext))]
    [Migration("20231104202550_4.11.2023")]
    partial class _4112023
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.12")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Port_Morski.Models.Cargo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("name");

                    b.Property<int?>("ShipId")
                        .HasColumnType("int")
                        .HasColumnName("ship_id");

                    b.Property<string>("Status")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("status");

                    b.Property<int?>("Weight")
                        .HasColumnType("int")
                        .HasColumnName("weight");

                    b.HasKey("Id");

                    b.HasIndex("ShipId");

                    b.ToTable("Cargo", (string)null);
                });

            modelBuilder.Entity("Port_Morski.Models.Dock", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("name");

                    b.HasKey("Id");

                    b.ToTable("Docks");
                });

            modelBuilder.Entity("Port_Morski.Models.EmpSchedule", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime")
                        .HasColumnName("end_date");

                    b.Property<string>("ShiftType")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("shift_type");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("datetime")
                        .HasColumnName("start_date");

                    b.Property<int?>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("user_id");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("EmpSchedule", (string)null);
                });

            modelBuilder.Entity("Port_Morski.Models.Operations", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("Date")
                        .HasColumnType("datetime")
                        .HasColumnName("date");

                    b.Property<int?>("DockId")
                        .HasColumnType("int")
                        .HasColumnName("dock_id");

                    b.Property<string>("Operation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ShipId")
                        .HasColumnType("int")
                        .HasColumnName("ship_id");

                    b.HasKey("Id");

                    b.HasIndex("DockId");

                    b.HasIndex("ShipId");

                    b.ToTable("Operations", (string)null);
                });

            modelBuilder.Entity("Port_Morski.Models.Ship", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("Capacity")
                        .HasColumnType("int")
                        .HasColumnName("capacity");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("name");

                    b.Property<string>("Type")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("type");

                    b.HasKey("Id");

                    b.ToTable("Ships");
                });

            modelBuilder.Entity("Port_Morski.Models.ShipSchedule", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("ArriveDate")
                        .HasColumnType("datetime")
                        .HasColumnName("arrive_date");

                    b.Property<int?>("DockId")
                        .HasColumnType("int")
                        .HasColumnName("dock_id");

                    b.Property<DateTime?>("FlowOutDate")
                        .HasColumnType("datetime")
                        .HasColumnName("flow_out_date");

                    b.Property<int?>("ShipId")
                        .HasColumnType("int")
                        .HasColumnName("ship_id");

                    b.HasKey("Id");

                    b.HasIndex("DockId");

                    b.HasIndex("ShipId");

                    b.ToTable("ShipSchedule", (string)null);
                });

            modelBuilder.Entity("Port_Morski.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("LastName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("last_name");

                    b.Property<string>("Login")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("login");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("name");

                    b.Property<string>("Password")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("password");

                    b.Property<string>("UserRole")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("user_role");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Port_Morski.Models.Cargo", b =>
                {
                    b.HasOne("Port_Morski.Models.Ship", "Ship")
                        .WithMany("Cargos")
                        .HasForeignKey("ShipId")
                        .HasConstraintName("FK_Cargo_Ships");

                    b.Navigation("Ship");
                });

            modelBuilder.Entity("Port_Morski.Models.EmpSchedule", b =>
                {
                    b.HasOne("Port_Morski.Models.User", "User")
                        .WithMany("EmpSchedules")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK_EmpSchedule_Users");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Port_Morski.Models.Operations", b =>
                {
                    b.HasOne("Port_Morski.Models.Dock", "Dock")
                        .WithMany("Operationss")
                        .HasForeignKey("DockId")
                        .HasConstraintName("FK_Operations_Docks");

                    b.HasOne("Port_Morski.Models.Ship", "Ship")
                        .WithMany("Operationss")
                        .HasForeignKey("ShipId")
                        .HasConstraintName("FK_Operations_Ships");

                    b.Navigation("Dock");

                    b.Navigation("Ship");
                });

            modelBuilder.Entity("Port_Morski.Models.ShipSchedule", b =>
                {
                    b.HasOne("Port_Morski.Models.Dock", "Dock")
                        .WithMany("ShipSchedules")
                        .HasForeignKey("DockId")
                        .HasConstraintName("FK_ShipSchedule_Docks");

                    b.HasOne("Port_Morski.Models.Ship", "Ship")
                        .WithMany("ShipSchedules")
                        .HasForeignKey("ShipId")
                        .HasConstraintName("FK_ShipSchedule_Ships");

                    b.Navigation("Dock");

                    b.Navigation("Ship");
                });

            modelBuilder.Entity("Port_Morski.Models.Dock", b =>
                {
                    b.Navigation("Operationss");

                    b.Navigation("ShipSchedules");
                });

            modelBuilder.Entity("Port_Morski.Models.Ship", b =>
                {
                    b.Navigation("Cargos");

                    b.Navigation("Operationss");

                    b.Navigation("ShipSchedules");
                });

            modelBuilder.Entity("Port_Morski.Models.User", b =>
                {
                    b.Navigation("EmpSchedules");
                });
#pragma warning restore 612, 618
        }
    }
}
